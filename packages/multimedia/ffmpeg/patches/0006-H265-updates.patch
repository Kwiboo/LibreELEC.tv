diff --git a/libavcodec/v4l2_request_hevc.c b/libavcodec/v4l2_request_hevc.c
index 35c8e0d26e..8299d63a53 100644
--- a/libavcodec/v4l2_request_hevc.c
+++ b/libavcodec/v4l2_request_hevc.c
@@ -20,21 +20,10 @@
 #include "hwaccel.h"
 #include "v4l2_request.h"
 
-/*
-struct v4l2_ctrl_hevc_scaling_matrix {
-    uint8_t scaling_list_4x4[6][16];
-    uint8_t scaling_list_8x8[6][64];
-    uint8_t scaling_list_16x16[6][64];
-    uint8_t scaling_list_32x32[2][64];
-    uint8_t scaling_list_dc_coef_16x16[6];
-    uint8_t scaling_list_dc_coef_32x32[2];
-};
-*/
-
 typedef struct V4L2RequestControlsHEVC {
     struct v4l2_ctrl_hevc_sps sps;
     struct v4l2_ctrl_hevc_pps pps;
-    //struct v4l2_ctrl_hevc_scaling_matrix scaling_matrix;
+    struct v4l2_ctrl_hevc_scaling_matrix scaling_matrix;
     struct v4l2_ctrl_hevc_slice_params slice_params;
 } V4L2RequestControlsHEVC;
 
@@ -215,10 +204,10 @@ static int v4l2_request_hevc_start_frame(AVCodecContext *avctx,
     const HEVCContext *h = avctx->priv_data;
     const HEVCSPS *sps = h->ps.sps;
     const HEVCPPS *pps = h->ps.pps;
-    //const ScalingList *sl = pps->scaling_list_data_present_flag ?
-    //                        &pps->scaling_list :
-    //                        sps->scaling_list_enable_flag ?
-    //                        &sps->scaling_list : NULL;
+    const ScalingList *sl = pps->scaling_list_data_present_flag ?
+                            &pps->scaling_list :
+                            sps->scaling_list_enable_flag ?
+                            &sps->scaling_list : NULL;
     V4L2RequestControlsHEVC *controls = h->ref->hwaccel_picture_private;
 
     /* ISO/IEC 23008-2, ITU-T Rec. H.265: Sequence parameter set */
@@ -255,7 +244,6 @@ static int v4l2_request_hevc_start_frame(AVCodecContext *avctx,
         .strong_intra_smoothing_enabled_flag = sps->sps_strong_intra_smoothing_enable_flag,
     };
 
-    /*
     if (sl) {
         for (int i = 0; i < 6; i++) {
             for (int j = 0; j < 16; j++)
@@ -271,7 +259,6 @@ static int v4l2_request_hevc_start_frame(AVCodecContext *avctx,
                 controls->scaling_matrix.scaling_list_dc_coef_32x32[i] = sl->sl_dc[1][i * 3];
         }
     }
-    */
 
     /* ISO/IEC 23008-2, ITU-T Rec. H.265: Picture parameter set */
     controls->pps = (struct v4l2_ctrl_hevc_pps) {
@@ -302,6 +289,7 @@ static int v4l2_request_hevc_start_frame(AVCodecContext *avctx,
         .lists_modification_present_flag = pps->lists_modification_present_flag,
         .log2_parallel_merge_level_minus2 = pps->log2_parallel_merge_level - 2,
         .slice_segment_header_extension_present_flag = pps->slice_header_extension_present_flag,
+	.scaling_list_enable_flag = pps->scaling_list_data_present_flag,
     };
 
     if (pps->tiles_enabled_flag) {
@@ -346,13 +334,11 @@ static int v4l2_request_hevc_end_frame(AVCodecContext *avctx)
             .ptr = &controls->pps,
             .size = sizeof(controls->pps),
         },
-        /*
         {
             .id = V4L2_CID_MPEG_VIDEO_HEVC_SCALING_MATRIX,
             .ptr = &controls->scaling_matrix,
             .size = sizeof(controls->scaling_matrix),
         },
-        */
         {
             .id = V4L2_CID_MPEG_VIDEO_HEVC_SLICE_PARAMS,
             .ptr = &controls->slice_params,
